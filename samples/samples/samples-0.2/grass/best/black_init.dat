{
  name = grass_light
  type = MODIFICATOR_LIGHT

  light_position.x =-1
  light_position.y = 1
  light_position.z =-1

  color_specular_active = 1
  color_specular = #404040
  //specular_shine = 0.1
  specular_shine = 0.08
}

// Target pixels - grass pixels
{
  name = grass_pixel_point
  type = MODIFICATOR_POINT_SINGLE

  // Base grass background (from fractal generator)
  {
   type = MODIFICATOR_POINT_OPBOX

   // color_mx is set by MODIFICATOR_POINT_OPBOX_INIT
   color_max = color_mx
   color_min = color_mx*0.3

   // PARAM_PREV_0 is relative position (0,1) on the generated line
   color = color_min + (color_max-color_min)*PARAM_PREV_0

   blend_parameter = norm(PARAM_PREV_1-0.3)
   pixel_color_final = pixel_color_final*(1-blend_parameter) + (color)*(blend_parameter)
   pixel_color_final.a = 1-blend_parameter

   height_delta = 0.0002
   pixel_height_final = pixel_height_final + height_delta*blend_parameter

   // Set the initial color by MODIFICATOR_POINT_OPBOX_INIT section
   {
     type = MODIFICATOR_POINT_OPBOX_INIT
     // PARAM_PREV_0 is from fractal modificator, the line modificator
     // does not pass anything to init section
     color_mx = #056000*(PARAM_PREV_0*2)
   }
  }
}

// Target pixels - grass pixels
{
  name = grass_line
  type = MODIFICATOR_LINE
  modificator_slave = grass_pixel_point

  coordinates_random = 1
  coordinates_random_num = 1
  coordinates_operation = ADD

  {
    type = MODIFICATOR_COORDINATE

    index = 0

    start.x = 0
    start.y = 0

    size.x = 30
    size.y = 30
  }

  {
    type = MODIFICATOR_COORDINATE

    index = 1

    start.x = 30
    start.y = 30

    size.x = -30
    size.y = -30
  }
}

{
  name = grass_fractal
  type = MODIFICATOR_FRACTAL
  modificator_slave = grass_line
  fractal_hurst = 0.1
  interpolation = MID_POINT
  pixel_step = 1
  height_range_min = 0.2
}

// Mesh generator
{
  name = test_generator
  type = GENERATOR_MESH

  modificator = grass_fractal
  modificator_target = TEXTURE

  modificator = grass_light
  modificator_target = TEXTURE
}

{
  name = generator_launcher
  type = GENERATOR_LAUNCHER

  generator_mesh = test_generator
}

